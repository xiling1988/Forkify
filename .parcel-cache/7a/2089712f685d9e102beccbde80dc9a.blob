var _modelJs = require('./model.js');
var _viewsRecipeViewJs = require('./views/recipeView.js');
var _parcelHelpers = require("@parcel/transformer-js/lib/esmodule-helpers.js");
var _viewsRecipeViewJsDefault = _parcelHelpers.interopDefault(_viewsRecipeViewJs);
var _viewsSearchViewJs = require('./views/searchView.js');
var _viewsSearchViewJsDefault = _parcelHelpers.interopDefault(_viewsSearchViewJs);
var _viewsResultsViewJs = require('./views/resultsView.js');
var _viewsResultsViewJsDefault = _parcelHelpers.interopDefault(_viewsResultsViewJs);
var _viewsPaginationViewJs = require('./views/paginationView.js');
var _viewsPaginationViewJsDefault = _parcelHelpers.interopDefault(_viewsPaginationViewJs);
var _viewsBookmarksViewJs = require('./views/bookmarksView.js');
var _viewsBookmarksViewJsDefault = _parcelHelpers.interopDefault(_viewsBookmarksViewJs);
var _viewsAddRecipeViewJs = require('./views/addRecipeView.js');
var _viewsAddRecipeViewJsDefault = _parcelHelpers.interopDefault(_viewsAddRecipeViewJs);
require('core-js/stable');
require('regenerator-runtime/runtime');
var _viewsAddRecipeViewJsDefault = _parcelHelpers.interopDefault(_viewsAddRecipeViewJs);
// if (module.hot) {
// module.hot.accept();
// }
const controlRecipes = async function () {
  try {
    const id = window.location.hash.slice(1);
    // console.log(id);
    if (!id) return;
    // guard clause
    _viewsRecipeViewJsDefault.default.renderSpinner();
    // Update selected recipe class
    _viewsResultsViewJsDefault.default.update(_modelJs.getSearchResultsPage());
    _viewsBookmarksViewJsDefault.default.update(_modelJs.state.bookmarks);
    // loading recipe
    await _modelJs.loadRecipe(id);
    // 2. Rendering recipe
    _viewsRecipeViewJsDefault.default.render(_modelJs.state.recipe);
  } catch (err) {
    _viewsRecipeViewJsDefault.default.renderError(err);
  }
};
const controlSearchResults = async function () {
  try {
    _viewsResultsViewJsDefault.default.renderSpinner();
    // 1) Get search query
    const query = _viewsSearchViewJsDefault.default.getQuery();
    if (!query) return;
    // 2) Load search results
    await _modelJs.loadSearchResults(query);
    console.log(_modelJs.state.search.results);
    // 3 Render Search Results
    _viewsResultsViewJsDefault.default.render(_modelJs.getSearchResultsPage());
    _viewsPaginationViewJsDefault.default.render(_modelJs.state.search);
  } catch (err) {
    _viewsResultsViewJsDefault.default.renderError();
  }
};
const controlServings = function (newServings) {
  _modelJs.updateServings(newServings);
  _viewsRecipeViewJsDefault.default.update(_modelJs.state.recipe);
};
const controlPagination = function (goToPage) {
  console.log('Pag Controller');
  _viewsResultsViewJsDefault.default.render(_modelJs.getSearchResultsPage(goToPage));
  _viewsPaginationViewJsDefault.default.render(_modelJs.state.search);
};
const controlAddBookmark = function () {
  if (!_modelJs.state.recipe.bookmarked) {
    _modelJs.addBookmark(_modelJs.state.recipe);
  } else {
    _modelJs.deleteBookmark(_modelJs.state.recipe.id);
  }
  _viewsRecipeViewJsDefault.default.update(_modelJs.state.recipe);
  _viewsBookmarksViewJsDefault.default.render(_modelJs.state.bookmarks);
};
const controlBookmarks = function () {
  _viewsBookmarksViewJsDefault.default.render(_modelJs.state.bookmarks);
};
const controlAddRecipe = async function (newRecipe) {
  try {
    console.log(newRecipe);
    await _modelJs.uploadRecipe(newRecipe);
    console.log(_modelJs.state.recipe);
  } catch (err) {
    console.error('ðŸ’¥', err);
    _viewsAddRecipeViewJsDefault.default.renderError(err.message);
  }
};
const init = function () {
  _viewsBookmarksViewJsDefault.default.addHandlerRender(controlBookmarks);
  _viewsRecipeViewJsDefault.default.addHandlerRender(controlRecipes);
  _viewsSearchViewJsDefault.default.addHandlerSearch(controlSearchResults);
  _viewsPaginationViewJsDefault.default.addHandlerClick(controlPagination);
  _viewsRecipeViewJsDefault.default.addHandlerServing(controlServings);
  _viewsRecipeViewJsDefault.default.addHandlerAddBookmark(controlAddBookmark);
  _viewsAddRecipeViewJsDefault.default.addHandlerUpload(controlAddRecipe);
};
init();
